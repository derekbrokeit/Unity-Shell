# start new session
#new-session
# tmux set {{{1
# keep track of terminal
setenv ORIGTERM $TERM

# set the title variables
set -g set-titles on
set -g set-titles-string '#T'

# make sure that tmux keeps windows well sized up overall
setw -g aggressive-resize on

# set default screen to 256 colors
set -g default-terminal "screen-256color"

# turn on utf8
setw -g utf8 on
set -g status-utf8 on

# change the color of panes
set -g pane-active-border-fg green
set -g pane-border-fg colour236

# turn on titles
set -g set-titles on

# set mouse select on (does not seem to work in 1.4)
setw -g mode-mouse on
setw -g monitor-activity on
set-option -g mouse-select-pane on

# Misc.
set -g default-terminal "screen-256color"
set -g history-limit 1000

# automatically reshuffle after closing a window
set -g renumber-windows on

# compensate for slow escape character in tmux
set-option -g escape-time 50

# set the path to the home directory
set-option default-path "$HOME" 
# tmux setw {{{1
# Highlight active window
set-window-option -g window-status-current-fg colour214
set-window-option -g window-status-format ' #[fg=colour8]#I#[fg=colour12]:#[default]#W#[fg=grey,dim]#F '
set-window-option -g window-status-current-format '[#I:#W#F]'

# when a bell goes off in a window, how will it be displayed
setw -g window-status-bell-attr default
setw -g window-status-bell-fg red

setw -g window-status-activity-attr default
setw -g window-status-activity-fg green

setw -g window-status-content-attr default
setw -g window-status-content-fg yellow

# add vim-like functionality 
setw -g mode-keys vi

# Notifying if other windows has activities
setw -g monitor-activity on
set -g visual-activity on

# Clock settings
set-window-option -g clock-mode-colour cyan
set-window-option -g clock-mode-style 24

# turn on utf8
set-window-option -g utf8 on

## key-binding {{{1
# Make it use C-a, similar to screen..
unbind C-b
set -g prefix C-a
bind-key a send-prefix

unbind l
#bind-key C-a next-window
bind C-a send-prefix
 
# Reload key
bind r source-file ${HOME}/.tmux.conf \; \
                   display-message "source-file done"

# run shell script in the background
bind S command-prompt "run-shell '%%'"


# detach ^D d
unbind ^D
bind ^D detach

# binding split-window
# More straight forward key bindings for splitting
unbind %
bind | split-window -h
bind b split-window -v 'tssh-select'
unbind '"'
bind - split-window -v
bind v split-window -h 'tssh-select'
bind C-w new-window 'tssh-select'

#bind c set-option default-path "$PWD" \; neww

# bindings for resizing panes
bind-key -r  k resize-pane -U 5
bind-key -r  j resize-pane -D 5
bind-key -r  h resize-pane -L 5
bind-key -r  l resize-pane -R 5

# kill the pane
bind-key -r  X kill-pane

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

#-----------
# Set status bar {{{1
set -g status-position top
source ~/.tmux.powerline.conf

