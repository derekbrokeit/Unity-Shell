#!/bin/bash
#
#!!! === This file is becoming OBSOLETE as I move to git              === !!!
#!!! === it remains only so that I may manage my svn repo temporarily === !!!
#
# This file holds the instructions for updating the svn-system (and bash profile)
#
#update system files (previously embedded in svnupdate)
# 
# ** backup svn repo as follows:
# svnadmin dump /path/to/repo | gzip > backup.svn.gz
# ** load it back with:
# svnadmin create newrepos
# gunzip backup.svn.gz
# svnadmin load newrepos < backup.svn.gz

# svnupdate: update svn {{{1
function svnupdate() {
   # save original directory and go to SVN directory
   CURR=$PWD
   cd $MD_SVN
   echo "SVN update:"
   
   if [[ "$COMP_TYPE" == "local" ]] ; then
      # update svn data
      svn update --username $(hostname -s) --password kaeNagasaki
      
   else
      if [[ "$COMP_TYPE" == "remote" ]] ; then
         destination="$MD_CODE $MD_BIN $MD_CG $SVN_BASH"
      else
         destination="$SVN_BASH $MD_BIN"
      fi
      
      for directory in $destination ; do
                  
         # get the directory name
         subD=${directory#$MD_SVN/}
         subD=${subD#.}
         
         echo "  - $subD: updating "
         
         mkdir -p $directory
         cd $directory
         
         if [[ "x$(ls $directory/.svn)" != "x" ]] ; then
            svn update
         
         else
            # something is wrong with the directory, so we must purge it
            rm -r $directory

            if [[ "x$filesvn" == "x" ]] ; then
               svn co svn+ssh://cello/home/derekt/svnroot/${subD}/trunk/ $directory
            else
               svn co ${filesvn}/${subD}/trunk/ $directory
            fi
         fi
      done
   fi
   # return to origional directory
   cd $CURR

   # fixing back file permissions
   for dir in $(du $SVN_BASH | awk '{print $NF}') ; do 
      chmod 700 $dir
      for stuff in $(ls $dir) ; do 
         if [[ ! -d $dir/$stuff ]] ; then
            chmod 600 $dir/$stuff
         fi
      done
   done
   # now that svn is updated, update the sys files
   sysupdate   
}
if [[ "$HOSTNAME" == "cello3" ]] ; then
  function privateBash() {
  
    # fixing back file permissions                      
    for dir in $(du $SVN_BASH | awk '{print $NF}') ; do 
       chmod 700 $dir                                   
       for stuff in $(ls $dir) ; do                     
          if [[ ! -d $dir/$stuff ]] ; then              
             chmod 600 $dir/$stuff                      
          fi                                            
       done                                             
    done                                                
  }
fi


# Local-system specific functions {{{1o
if [ "$COMP_TYPE" == "local" ] ; then
   # svnstatus: status of svn-root-directory  {{{2
   function svnstatus() {
      CURR=$PWD
      stat=$(svn status $MD_SVN)
    
      if [ "x$stat" == "x" ] ; then
         # exit with error status
         ! echo "svn status: no changes found"
      else
         echo "svn status:"
         echo -n "$stat"
         echo ""
      fi
      
   }
   
   # svnignore: ignore a directory or file that gets updated a lot  {{{2
   function svnignore() {
      echo "svnignore:"
      if [ "x$1" != "x" ] ; then
         svn propedit svn:ignore $1
      else
         echo "*** Please provide a file name or directory to ignore"
      fi
   }
   
   # svncia: commits a all svn subdirectories {{{2
   function svncia(){
      stopAll=1
      echo "svnciAll: $@"
      if [[ "x$@" == "x" ]] ; then
         tmp=$(mktemp /tmp/svncia.XXX)
         
         echo -ne "checking svn status ... \r"
         svnstatus > $tmp
         echo -ne "                        \r"

         # check if a commit is necessary
         if [[ $? -gt 0 ]] ; then
            echo "*** No commit necessary"
            stopAll=0
         fi
         
         # ask user if files should be added
         #cat $tmp | grep '?' | awk '{print $NF}'
         list=$(cat $tmp | grep '\?' | awk '{print $NF}')
         rm $tmp
         if [[ $stopAll -eq 1 ]] && [[ "x$(echo $list)" != "x" ]] ; then
            echo "-- $(echo $list | awk '{print NF}') unkown files exist in \$MD_SVN"
            i=1
            for file in $list ; do
               num=$(echo $i | awk '{printf "%3d",$1}')
               echo "$num: ${file#$MD_SVN}"
               while true ; do
                  read -p "   > add $(basename $file) (y/n)? " yn
                  case $yn in
                     [Yy]* ) svn add $file ; break ;;
                     [Nn]* ) break ;;
                     *     ) echo "*** Please answer yes or no?" ;;
                  esac
               done
               let i++
            done
         fi

         # now, we need to ask the user for svn commit memo
         if [[ stopAll -ne 0 ]] ; then
            svnstatus
            while true; do
               read -p "-- memo: " memo
               if [[ "x$memo" == "x" ]] ; then
                  echo "*** Please provide a useful log-memo"
               else
                  break
               fi
            done
         fi
      else
         memo="$@"
      fi

      # perform the commit
      if [[ $stopAll -ne 0 ]] ; then
         direc=$PWD
         cd $MD_SVN
         svn ci -m "$memo" \
            && growlnotify "SVN commit: All" -m "$memo"
         cd $direc
      fi

   }
   
   # SVN aliases {{{2
   alias cdsvn='cd $MD_SVN'
   alias svncoa='svn co svn+ssh://cello.t.u-tokyo.ac.jp/home/derekt/svnroot/'
   alias svnci='svn ci -m '   
fi
